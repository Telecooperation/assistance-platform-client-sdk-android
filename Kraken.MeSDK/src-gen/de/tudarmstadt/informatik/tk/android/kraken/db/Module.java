package de.tudarmstadt.informatik.tk.android.kraken.db;

import java.util.List;
import de.tudarmstadt.informatik.tk.android.kraken.db.DaoSession;
import de.greenrobot.dao.DaoException;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT. Enable "keep" sections if you want to edit. 
/**
 * Entity mapped to table "module".
 */
public class Module {

    private long id;
    /** Not-null value. */
    private String package;
    /** Not-null value. */
    private String title;
    /** Not-null value. */
    private String logoUrl;
    /** Not-null value. */
    private String descriptionShort;
    /** Not-null value. */
    private String descriptionFull;
    /** Not-null value. */
    private String copyright;
    /** Not-null value. */
    private String supportEmail;
    /** Not-null value. */
    private String created;

    /** Used to resolve relations */
    private transient DaoSession daoSession;

    /** Used for active entity operations. */
    private transient ModuleDao myDao;

    private List<ModuleCapability> moduleCapabilityList;

    public Module() {
    }

    public Module(long id) {
        this.id = id;
    }

    public Module(long id, String package, String title, String logoUrl, String descriptionShort, String descriptionFull, String copyright, String supportEmail, String created) {
        this.id = id;
        this.package = package;
        this.title = title;
        this.logoUrl = logoUrl;
        this.descriptionShort = descriptionShort;
        this.descriptionFull = descriptionFull;
        this.copyright = copyright;
        this.supportEmail = supportEmail;
        this.created = created;
    }

    /** called by internal mechanisms, do not call yourself. */
    public void __setDaoSession(DaoSession daoSession) {
        this.daoSession = daoSession;
        myDao = daoSession != null ? daoSession.getModuleDao() : null;
    }

    public long getId() {
        return id;
    }

    public void setId(long id) {
        this.id = id;
    }

    /** Not-null value. */
    public String getPackage() {
        return package;
    }

    /** Not-null value; ensure this value is available before it is saved to the database. */
    public void setPackage(String package) {
        this.package = package;
    }

    /** Not-null value. */
    public String getTitle() {
        return title;
    }

    /** Not-null value; ensure this value is available before it is saved to the database. */
    public void setTitle(String title) {
        this.title = title;
    }

    /** Not-null value. */
    public String getLogoUrl() {
        return logoUrl;
    }

    /** Not-null value; ensure this value is available before it is saved to the database. */
    public void setLogoUrl(String logoUrl) {
        this.logoUrl = logoUrl;
    }

    /** Not-null value. */
    public String getDescriptionShort() {
        return descriptionShort;
    }

    /** Not-null value; ensure this value is available before it is saved to the database. */
    public void setDescriptionShort(String descriptionShort) {
        this.descriptionShort = descriptionShort;
    }

    /** Not-null value. */
    public String getDescriptionFull() {
        return descriptionFull;
    }

    /** Not-null value; ensure this value is available before it is saved to the database. */
    public void setDescriptionFull(String descriptionFull) {
        this.descriptionFull = descriptionFull;
    }

    /** Not-null value. */
    public String getCopyright() {
        return copyright;
    }

    /** Not-null value; ensure this value is available before it is saved to the database. */
    public void setCopyright(String copyright) {
        this.copyright = copyright;
    }

    /** Not-null value. */
    public String getSupportEmail() {
        return supportEmail;
    }

    /** Not-null value; ensure this value is available before it is saved to the database. */
    public void setSupportEmail(String supportEmail) {
        this.supportEmail = supportEmail;
    }

    /** Not-null value. */
    public String getCreated() {
        return created;
    }

    /** Not-null value; ensure this value is available before it is saved to the database. */
    public void setCreated(String created) {
        this.created = created;
    }

    /** To-many relationship, resolved on first access (and after reset). Changes to to-many relations are not persisted, make changes to the target entity. */
    public List<ModuleCapability> getModuleCapabilityList() {
        if (moduleCapabilityList == null) {
            if (daoSession == null) {
                throw new DaoException("Entity is detached from DAO context");
            }
            ModuleCapabilityDao targetDao = daoSession.getModuleCapabilityDao();
            List<ModuleCapability> moduleCapabilityListNew = targetDao._queryModule_ModuleCapabilityList(id);
            synchronized (this) {
                if(moduleCapabilityList == null) {
                    moduleCapabilityList = moduleCapabilityListNew;
                }
            }
        }
        return moduleCapabilityList;
    }

    /** Resets a to-many relationship, making the next get call to query for a fresh result. */
    public synchronized void resetModuleCapabilityList() {
        moduleCapabilityList = null;
    }

    /** Convenient call for {@link AbstractDao#delete(Object)}. Entity must attached to an entity context. */
    public void delete() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.delete(this);
    }

    /** Convenient call for {@link AbstractDao#update(Object)}. Entity must attached to an entity context. */
    public void update() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.update(this);
    }

    /** Convenient call for {@link AbstractDao#refresh(Object)}. Entity must attached to an entity context. */
    public void refresh() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.refresh(this);
    }

}
